{
  "required": true,
  "package": "com.axialeaa.doormat.mixin",
  "compatibilityLevel": "JAVA_17",
  "mixins": [
    "extendables.AbstractBlockMixin",
    "extendables.LivingEntityMixin",
    "integrators.ComparatorBlockMixin",
    "integrators.RedstoneWireBlockMixin",
    "integrators.WorldMixin",
    "rules.accurateAzaleaLeafDistribution.AzaleaBlockMixin",
    "rules.azaleaLeavesGrowFlowers.LeavesBlockMixin",
    "rules.beaconsHealPets.BeaconBlockEntityMixin",
    "rules.chiseledBookshelfSignal.ChiseledBookshelfBlockMixin",
    "rules.comparatorsReadThrough.ChainBlockMixin",
    "rules.comparatorsReadThrough.DirtPathBlockMixin",
    "rules.comparatorsReadThrough.PistonBlockMixin",
    "rules.composterSideInputs.ComposterInventoryMixin",
    "rules.consistentExplosionImmunity.ExplosionMixin",
    "rules.consistentExplosionImmunity.OptimizedExplosionMixin",
    "rules.disableEndPortalCrossing.EndPortalBlockMixin",
    "rules.disableNetherPortalCrossing.NetherPortalBlockMixin",
    "rules.disablePetAttacking.TameableEntityMixin",
    "rules.disableShulkerReproduction.ShulkerEntityMixin",
    "rules.dustTravelDownGlass.AbstractGlassBlockMixin",
    "rules.fireAspectLighting.BlockItemMixin",
    "rules.fireAspectLighting.ItemMixin",
    "rules.forceGrassSpread.BlockMixin",
    "rules.growableSwampOakTrees.SaplingBlockMixin",
    "rules.huskWashing.HuskEntityMixin",
    "rules.insomniaDaysSinceSlept.PhantomSpawnerMixin",
    "rules.jukeboxDiscProgressSignal.JukeboxBlockEntityMixin",
    "rules.jukeboxDiscProgressSignal.JukeboxBlockMixin",
    "rules.leavesNoCollision.LeavesBlockMixin",
    "rules.maxMinecartSpeed.AbstractMinecartEntityMixin",
    "rules.peacefulMonsterSpawning.block.NetherPortalBlockMixin",
    "rules.peacefulMonsterSpawning.block.SculkShriekerBlockEntityMixin",
    "rules.peacefulMonsterSpawning.block.WitherSkullBlockMixin",
    "rules.peacefulMonsterSpawning.entity.DrownedEntityMixin",
    "rules.peacefulMonsterSpawning.entity.GhastEntityMixin",
    "rules.peacefulMonsterSpawning.entity.GuardianEntityMixin",
    "rules.peacefulMonsterSpawning.entity.HostileEntityMixin",
    "rules.peacefulMonsterSpawning.entity.MagmaCubeEntityMixin",
    "rules.peacefulMonsterSpawning.entity.MobEntityMixin",
    "rules.peacefulMonsterSpawning.entity.Pig_VillagerEntityMixin",
    "rules.peacefulMonsterSpawning.entity.SlimeEntityMixin",
    "rules.peacefulMonsterSpawning.entity.WitherEntityMixin",
    "rules.peacefulMonsterSpawning.entity.ZombifiedPiglinEntityMixin",
    "rules.peacefulMonsterSpawning.world.LocalDifficultyMixin",
    "rules.peacefulMonsterSpawning.world.MinecraftServerMixin",
    "rules.peacefulMonsterSpawning.world.RaidMixin",
    "rules.peacefulMonsterSpawning.world.SpawnGroupMixin",
    "rules.phantomMinSpawnAltitude.PhantomSpawnerMixin",
    "rules.pistonMovementTime.PistonBlockEntityMixin",
    "rules.playerDropAllXp.PlayerEntityMixin",
    "rules.portalForceTicking.NetherPortalBlockMixin",
    "rules.propagulePropagation.FallingBlockEntity",
    "rules.propagulePropagation.PropaguleBlockMixin",
    "rules.ravagersStompPlants.PlantBlockMixin",
    "rules.renewableCobwebs.MobSpawnerLogicMixin",
    "rules.renewableGildedBlackstone.BlocksMixin",
    "rules.renewableGildedBlackstone.MagmaBlockMixin",
    "rules.renewableSporeBlossoms_mossSpreadTo.MossBlockMixin",
    "rules.renewableSporeBlossoms_mossSpreadTo.SporeBlossomBlockMixin",
    "rules.softInversion.RedstoneTorchBlockMixin",
    "rules.softInversion.WallRedstoneTorchBlockMixin",
    "rules.stairDiodes.StairBlockMixin",
    "rules.stickyPillarBlocks.PillarBlockMixin",
    "rules.stickyStickyPistons.PistonBlockMixin",
    "rules.thornyRoseBush.TallFlowerBlockMixin",
    "rules.torchBurnout.RedstoneTorchBlockMixin",
    "rules.updateType_quasiConnecting.AbstractRailBlockMixin",
    "rules.updateType_quasiConnecting.BellBlockMixin",
    "rules.updateType_quasiConnecting.DispenserBlockMixin",
    "rules.updateType_quasiConnecting.DoorBlockMixin",
    "rules.updateType_quasiConnecting.FenceGateBlock",
    "rules.updateType_quasiConnecting.HopperBlockMixin",
    "rules.updateType_quasiConnecting.NoteBlockMixin",
    "rules.updateType_quasiConnecting.PistonBlockEntityMixin",
    "rules.updateType_quasiConnecting.PistonBlockMixin",
    "rules.updateType_quasiConnecting.PistonHeadBlockMixin",
    "rules.updateType_quasiConnecting.PoweredRailBlockMixin",
    "rules.updateType_quasiConnecting.RedstoneLampBlockMixin",
    "rules.updateType_quasiConnecting.TntBlockMixin",
    "rules.updateType_quasiConnecting.TrapdoorBlockMixin",
    "rules.zoglinsSpawnInPortals.NetherPortalBlockMixin"
  ],
  "injectors": {
    "defaultRequire": 1
  }
}