{
  "carpet.rule.accurateAzaleaLeafDistribution.desc": "The distribution of azalea leaf types matches the azalea bush the tree is grown from",
  "carpet.rule.accurateAzaleaLeafDistribution.extra.0": "These features are controlled through doormat/worldgen/configured_feature/azalea_tree_many_flowers.json and azalea_tree_no_flowers.json respectively.",
  "carpet.rule.alwaysHalloween.desc": "Mobs will always have a chance to wear carved pumpkins, regardless of the time of year",
  "carpet.rule.alwaysHalloween.extra.0": "This also affects bat spawning rates.",
  "carpet.rule.azaleaLeavesGrowFlowers.desc": "Azalea leaves grow flowers when fertilized",
  "carpet.rule.barrelItemDumping.desc": "Barrels facing down will eject all of their contained items when opened",
  "carpet.rule.basaltGenProduct.desc": "The block produced when lava flows between soul soil and blue ice",
  "carpet.rule.beaconsHealPets.desc": "Beacons with their secondary effect set to regeneration can heal nearby tamed mobs",
  "carpet.rule.biomeDependentDungeonMobs.desc": "The mobs that spawn inside dungeons will represent the biome the dungeon generated in",
  "carpet.rule.biomeDependentDungeonMobs.extra.0": "Zombies get replaced by husks in warm biomes, and skeletons get replaced by strays in cold biomes and bogged in swamp biomes.",
  "carpet.rule.biomeDependentDungeonMobs.extra.1": "This will not affect previously-generated chunks, so if you intend to feature this modification on a long-term survival world, it's best to enable the setting right away.",
  "carpet.rule.blockFallingDelay.desc": "The time it takes for gravity-affected blocks to fall after receiving a shape update, in ticks",
  "carpet.rule.campfireRespawning.desc": "Lit campfires can be set as respawn points when clicking on them with an empty hand, while sneaking",
  "carpet.rule.campfireRespawning.extra.0": "Regular campfires will extinguish every time you respawn next to them, while soul campfire flames persist.",
  "carpet.rule.chiseledBookshelfFullnessSignal.desc": "Comparators measure the number of books in chiseled bookshelves instead of the last slot interacted with",
  "carpet.rule.chiseledBookshelfFullnessSignal.extra.0": "\"lerped\" interpolates from 1 to 15, instead of outputting the exact number.",
  "carpet.rule.cobblestoneGenProduct.desc": "The block produced when flowing lava meets water",
  "carpet.rule.commandDelay.desc": "Enables /delay command to change the delay of individual redstone components",
  "carpet.rule.commandQC.desc": "Enables /quasiconnectivity command to toggle quasi-power capability for individual redstone components",
  "carpet.rule.commandRandomTick.desc": "Enables /randomtick command to forcibly send randomTicks to the specified block position",
  "carpet.rule.commandTickPriority.desc": "Enables /tickpriority command to change the tick priority of the scheduled block ticks sent by individual redstone components",
  "carpet.rule.commandUpdateType.desc": "Enables /updatetype command to change the updates individual redstone components emit when changing state",
  "carpet.rule.compactBannerTooltips.desc": "Compacts the tooltips of banners by listing their patterns as a cycling carousel",
  "carpet.rule.compactBannerTooltips.extra.0": "For more information, check the designated Github wiki page!",
  "carpet.rule.compactEnchantTooltips.desc": "Compacts the tooltips of enchantments by listing them as a cycling carousel",
  "carpet.rule.compactEnchantTooltips.extra.0": "For more information, check the designated Github wiki page!",
  "carpet.rule.compactPotTooltips.desc": "Compacts the tooltips of decorated pots by grouping like sherds together",
  "carpet.rule.compactPotTooltips.extra.0": "\"ignore_bricks\" removes bricks from the tooltips entirely.",
  "carpet.rule.compactPotTooltips.extra.1": "For more information, check the designated Github wiki page!",
  "carpet.rule.compactTemplateTooltips.desc": "Compacts the tooltips of smithing templates by removing the \"Applies to\" and \"Ingredients\" text",
  "carpet.rule.compactTemplateTooltips.extra.0": "For more information, check the designated Github wiki page!",
  "carpet.rule.compactTrimTooltips.desc": "Compacts the tooltips of armor trims to a single line",
  "carpet.rule.compactTrimTooltips.extra.0": "\"only_pattern\" removes the material text but leaves the color formatting.",
  "carpet.rule.compactTrimTooltips.extra.1": "For more information, check the designated Github wiki page!",
  "carpet.rule.comparatorsReadThroughChains.desc": "Comparators can read through chains, like in Bedrock Edition",
  "carpet.rule.comparatorsReadThroughPaths.desc": "Comparators can read through dirt paths, like in Bedrock Edition",
  "carpet.rule.comparatorsReadThroughPistons.desc": "Comparators can read through pistons, like in Bedrock Edition",
  "carpet.rule.composterSideInputs.desc": "Items can be inserted into composters from all 6 sides instead of just the top, via hoppers and droppers.",
  "carpet.rule.consistentExplosionImmunity.desc": "Explosion-immune blocks also apply this property to their dropped item counterparts",
  "carpet.rule.consistentExplosionImmunity.extra.0": "Though marked as \"Works As Intended\", this rule technically fixes this bug: https://bugs.mojang.com/browse/MC-212764",
  "carpet.rule.consistentWaterlogPushing.desc": "Blocks will always conserve their waterlogged state upon being pushed by a piston, regardless of the length of the pulse",
  "carpet.rule.consistentWaterlogPushing.extra.0": "Despite the intentional behavior clearly being for the water to vanish, this rule partly satisfies this open report: https://bugs.mojang.com/browse/MC-130202",
  "carpet.rule.copperBulbOxidationSignal.desc": "Comparators reading from copper bulbs output a signal strength based on the oxidation stage, instead of a binary output",
  "carpet.rule.crafterSignalLerping.desc": "Comparators output a signal strength from 1 to 15 instead of 1 to 9 when reading from crafters",
  "carpet.rule.cryingObsidianPortalFrames.desc": "Crying obsidian can be used in the frames of nether portals",
  "carpet.rule.deepslateDungeons.desc": "Dungeons that generate below y = 0 will be made of cobbled deepslate instead of cobblestone",
  "carpet.rule.deepslateDungeons.extra.0": "This will not affect previously-generated chunks, so if you intend to feature this modification on a long-term survival world, it's best to enable the setting right away.",
  "carpet.rule.disableBedTooFarWarning.desc": "Allows players to sleep when they are more than 3 blocks away from the bed",
  "carpet.rule.disableBedUnsafeWarning.desc": "Allows players to sleep when there are nearby monsters",
  "carpet.rule.disableDragonEggTeleportation.desc": "Disables dragon eggs teleporting when clicking on them",
  "carpet.rule.disableEndGatewayCrossing.desc": "Disables travelling through end gateways",
  "carpet.rule.disableEndPortalCrossing.desc": "Disables travelling through end portals",
  "carpet.rule.disableMaceKnockback.desc": "Disables maces knocking back entities upon a successful hit",
  "carpet.rule.disableNetherPortalCrossing.desc": "Disables travelling through nether portals",
  "carpet.rule.disablePetAttacking.desc": "Disables players harming tamed mobs",
  "carpet.rule.disablePetAttacking.extra.0": "\"owned\" allows players to hit pets that aren't their own.",
  "carpet.rule.disablePrematureBlockFalling.desc": "Disables shape updates scheduling gravity-affected blocks to fall even when they aren't able to",
  "carpet.rule.disableShulkerReproduction.desc": "Disables shulkers duplicating when hit by bullets",
  "carpet.rule.disableShulkerReproduction.extra.0": "Intended to be used in tandem with carpet's shulkerSpawningInEndCities.",
  "carpet.rule.dispensersBuryItems.desc": "Allows dispensers to bury custom item stacks inside sand or gravel, turning them into suspicious blocks which players can brush",
  "carpet.rule.dragonEggFallingDelay.desc": "The time it takes for dragon eggs to fall after receiving a shape update, in ticks",
  "carpet.rule.endExitIgnoreLeaves.desc": "Players teleporting back to spawn from the end dimension will ignore leaves when deciding where to land, just like other entities",
  "carpet.rule.endPlatformSillyString.desc": "Removes the extra setBlock() call that prevents string-based generation suppression being usable on the end platform",
  "carpet.rule.endPlatformSillyString.extra.0": "\"delete_string\" prevents the string from dropping as an item, for the most part restoring pre-1.21 behavior.",
  "carpet.rule.fastLeafDecayingChance.desc": "The chance per gametick of leaves decaying when their supporting logs are removed",
  "carpet.rule.fastLeafDecayingChance.extra.0": "0 restores vanilla randomTick behavior, and 0.075 is the value that matches the behavior of Vanilla Tweaks' datapack.",
  "carpet.rule.fireAspectLighting.desc": "Items enchanted with fire aspect can be used to light campfires, candles and TNT, like in Bedrock Edition",
  "carpet.rule.forceGrassSpreading.desc": "Grass and mycelium can instantly spread to adjacent dirt, when the dirt is fertilized with bonemeal",
  "carpet.rule.forceGrassSpreading.extra.0": "This behaves the same as nylium in vanilla.",
  "carpet.rule.grassAgingChance.desc": "The chance per randomTick of a grass block growing short and tall grass naturally",
  "carpet.rule.grassAgingChance.extra.0": "0 restores vanilla grass block behavior, i.e. not growing any short or tall grass naturally.",
  "carpet.rule.growableSwampOakTrees.desc": "Oak saplings grow into swamp oaks in swamp biomes",
  "carpet.rule.highlightSleepDeprivers.desc": "Clicking a bed applies the glowing effect to monsters that are actively preventing sleep",
  "carpet.rule.hopperTransferTime.desc": "The time it takes for a hopper to transfer an item, in ticks",
  "carpet.rule.huskWashing.desc": "Adult husks drop 1-3 sand when converting into zombies",
  "carpet.rule.incrediblySecretSetting.desc": "Â§kblblblbllblblbblblblblblblblÂ§r :3",
  "carpet.rule.insomniaDayCount.desc": "The number of sleepless nights after which phantoms can spawn around the player",
  "carpet.rule.jukeboxDiscProgressSignal.desc": "Comparators reading from jukeboxes output a signal strength based on how much of the music disc has been played, instead of the disc index",
  "carpet.rule.lavaFlowSpeedDefault.desc": "The time it takes for lava to flow one block in the overworld or end, in ticks.",
  "carpet.rule.lavaFlowSpeedNether.desc": "The time it takes for lava to flow one block in the nether, in ticks.",
  "carpet.rule.lazyLoadedShearSuppression.desc": "Mobs in lazy chunks can be sheared without updating, like in Bedrock Edition",
  "carpet.rule.leavesNoCollision.desc": "Disables the tangibility of leaves, making it easier to traverse areas with lots of trees",
  "carpet.rule.maxMinecartSpeedLand.desc": "The maximum speed minecarts can travel at on land in blocks per second",
  "carpet.rule.maxMinecartSpeedWater.desc": "The maximum speed minecarts can travel at underwater in blocks per second",
  "carpet.rule.moreTimeArgumentUnits.desc": "Adds minute (m), hour (h) and week (w) units to time arguments in commands",
  "carpet.rule.mossSpreadToCobblestone.desc": "Moss can convert nearby cobblestone to mossy cobblestone when fertilized",
  "carpet.rule.mossSpreadToCobblestone.extra.0": "This feature is controlled through doormat/worldgen/configured_feature/mossy_cobblestone_patch.json.",
  "carpet.rule.mossSpreadToStoneBricks.desc": "Moss can convert nearby stone bricks to mossy stone bricks when fertilized",
  "carpet.rule.mossSpreadToStoneBricks.extra.0": "This feature is controlled through doormat/worldgen/configured_feature/mossy_stone_bricks_patch.json.",
  "carpet.rule.movableEnchantingTables.desc": "Enchanting tables can be pushed with pistons",
  "carpet.rule.movableEnchantingTables.extra.0": "Requires that movableBlockEntities is enabled.",
  "carpet.rule.movableEnderChests.desc": "Ender chests can be pushed with pistons",
  "carpet.rule.movableEnderChests.extra.0": "Requires that movableBlockEntities is enabled.",
  "carpet.rule.observerHalfDelay.desc": "Observers have a delay of 1 tick when placed on top of a redstone ore.",
  "carpet.rule.observerHalfDelay.extra.0": "This is inspired by TIS Addition's repeaterHalfDelay rule.",
  "carpet.rule.obsidianFrameConversionChance.desc": "The chance per randomTick of portals converting adjacent obsidian to crying obsidian",
  "carpet.rule.obsidianFrameConversionChance.extra.0": "Requires that cryingObsidianPortalFrames is enabled.",
  "carpet.rule.obsidianGenProduct.desc": "The block produced when water meets still lava",
  "carpet.rule.peacefulMonsterSpawning.desc": "Hostile mobs can passively spawn in peaceful mode",
  "carpet.rule.peacefulMonsterSpawning.extra.0": "For more information, check the designated Github wiki page!",
  "carpet.rule.persistentRespawnAnchorCharge.desc": "Disables respawn anchor charges decrementing when the player respawns.",
  "carpet.rule.phantomMinSpawnAltitude.desc": "The minimum y height the player needs to be standing at in order to spawn phantoms",
  "carpet.rule.pistonMovementTime.desc": "The time it takes for a piston to fully extend or retract, in ticks",
  "carpet.rule.playersDropAllXp.desc": "Players drop all of their XP on death instead of a capped amount",
  "carpet.rule.portalForceTicking.desc": "Nether portal blocks randomTick when lit, like in Bedrock Edition",
  "carpet.rule.powderSnowPortalBreaking.desc": "Powder snow can be used to break nether portals, like in Bedrock Edition",
  "carpet.rule.propagulePropagation.desc": "Mangrove propagules actually propagate, falling from trees and planting themselves automatically",
  "carpet.rule.qcSuppressor.desc": "Emerald ore breaks the quasi-connection between components and power sources",
  "carpet.rule.ravagersStompPlants.desc": "Ravagers can break plants, like in Bedrock Edition",
  "carpet.rule.ravagersStompSnow.desc": "Ravagers can break snow layers, like in Bedrock Edition",
  "carpet.rule.reachAroundBridging.desc": "Blocks can be placed by aiming in front of the block you're standing on, like in Bedrock Edition",
  "carpet.rule.redstoneOpensBarrels.desc": "Powering barrels with redstone forces them open",
  "carpet.rule.renewableGildedBlackstone.desc": "The chance per randomTick of blackstone adjacent to underwater magma blocks becoming gilded",
  "carpet.rule.renewableGildedBlackstone.extra.0": "0 restores vanilla behavior, i.e. never becoming gilded.",
  "carpet.rule.renewableSporeBlossoms.desc": "Spore blossoms generate underneath fertilized moss blocks",
  "carpet.rule.retroRepeaterDelay.desc": "Repeaters have delays of 2, 4, 10 and 14 ticks respectively, like they did during development of beta 1.3",
  "carpet.rule.safeSand.desc": "Floating gravity-affected blocks are stable until receiving an update from the underside, preventing cave-ins and quicksand",
  "carpet.rule.sculkCatalystXpCount.desc": "The amount of XP dropped from mining a sculk catalyst",
  "carpet.rule.sculkCatalystXpCount.extra.0": "20 is the value that matches the behavior from before 1.19.1pre6.",
  "carpet.rule.sneakingRandomTickChance.desc": "The chance each time you sneak for a nearby block to get randomTicked",
  "carpet.rule.sneakingRandomTickChance.extra.0": "0 restores vanilla behavior, i.e. not accelerating growth by sneaking.",
  "carpet.rule.snowFormsUnderLeaves.desc": "Snow layers accumulate under leaves instead of on top during snowstorms.",
  "carpet.rule.softInversion.desc": "Redstone torches placed on the sides of pistons deactivate when the piston extends, like in Bedrock Edition",
  "carpet.rule.solidEntityCollision.desc": "Living entities can be collided with like boats",
  "carpet.rule.spawnersGenerateCobwebs.desc": "Cave spider spawners generate cobwebs between nearby solid faces each spawn cycle",
  "carpet.rule.spawnersGenerateCobwebs.extra.0": "For more information, check the designated Github wiki page!",
  "carpet.rule.sporeBlossomDuplication.desc": "Spore blossoms drop themselves when fertilized, the same way tall flowers do",
  "carpet.rule.stickyPillarBlocks.desc": "Pillar blocks like logs and bone blocks stick to each other based on the axis direction when moved",
  "carpet.rule.stickyPillarBlocks.extra.0": "\"stick_to_all\" causes them to connect to each other regardless of axis direction.",
  "carpet.rule.stickyStickyPistons.desc": "Sticky pistons act like directional slime blocks",
  "carpet.rule.stickyStickyPistons.extra.0": "\"stick_to_all\" causes them to stick omnidirectionally like normal slime blocks.",
  "carpet.rule.stoneGenProduct.desc": "The block produced when lava flows on top of water",
  "carpet.rule.suspiciousLootAmountFix.desc": "Item stacks buried in suspicious sand or gravel drop their expected amount when brushed instead of a random number between 10-30",
  "carpet.rule.suspiciousLootAmountFix.extra.0": "This rule fixes this bug: https://bugs.mojang.com/browse/MC-260225",
  "carpet.rule.suspiciousLootDropPosFix.desc": "Brushing suspicious sand or gravel aligns the dropped loot against the block face",
  "carpet.rule.suspiciousLootDropPosFix.extra.0": "This rule fixes this bug: https://bugs.mojang.com/browse/MC-272398",
  "carpet.rule.torchBurnoutFlickerAmount.desc": "The number of times a redstone torch must flicker within the allocated timespan in order to burn out",
  "carpet.rule.torchBurnoutTime.desc": "The allocated time a torch has to reach its flicker count in order to burn out, in ticks",
  "carpet.rule.torchBurnoutTime.extra.0": "40 is the value that matches Bedrock Edition's behavior, assuming the default flicker amount value",
  "carpet.rule.trialSpawnerEntityRequirement.desc": "The types of entities to check around the trial spawner before spawning mobs",
  "carpet.rule.villagersAlwaysInheritBiome.desc": "Baby villagers will always assume the clothing of the biome they're born in",
  "carpet.rule.villagersAlwaysInheritBiome.extra.0": "Intended to be used in tandem with the in-built trade rebalance experimental toggle.",
  "carpet.rule.waterFlowSpeed.desc": "The time it takes for water to flow one block, in ticks.",
  "carpet.rule.woolDesertPyramids.desc": "The terracotta details on desert pyramids will be made of wool instead, like before 1.8",
  "carpet.rule.woolDesertPyramids.extra.0": "This will not affect previously-generated chunks, so if you intend to feature this modification on a long-term survival world, it's best to enable the setting right away.",
  "carpet.rule.zoglinPortalSpawnChance.desc": "The chance of a zoglin spawning inside a nether portal instead of a zombified piglin",
  "carpet.rule.zoglinPortalSpawnChance.extra.0": "0 restores vanilla behavior, i.e. never spawning zoglins.",
  "compact_tooltip.pot.angler_pottery_sherd": "Angler",
  "compact_tooltip.pot.archer_pottery_sherd": "Archer",
  "compact_tooltip.pot.arms_up_pottery_sherd": "Arms Up",
  "compact_tooltip.pot.blade_pottery_sherd": "Blade",
  "compact_tooltip.pot.brewer_pottery_sherd": "Brewer",
  "compact_tooltip.pot.brick": "Blank",
  "compact_tooltip.pot.burn_pottery_sherd": "Burn",
  "compact_tooltip.pot.danger_pottery_sherd": "Danger",
  "compact_tooltip.pot.explorer_pottery_sherd": "Explorer",
  "compact_tooltip.pot.flow_pottery_sherd": "Flow",
  "compact_tooltip.pot.friend_pottery_sherd": "Friend",
  "compact_tooltip.pot.guster_pottery_sherd": "Guster",
  "compact_tooltip.pot.heart_pottery_sherd": "Heart",
  "compact_tooltip.pot.heartbreak_pottery_sherd": "Heartbreak",
  "compact_tooltip.pot.howl_pottery_sherd": "Howl",
  "compact_tooltip.pot.miner_pottery_sherd": "Miner",
  "compact_tooltip.pot.mourner_pottery_sherd": "Mourner",
  "compact_tooltip.pot.plenty_pottery_sherd": "Plenty",
  "compact_tooltip.pot.prize_pottery_sherd": "Prize",
  "compact_tooltip.pot.scrape_pottery_sherd": "Scrape",
  "compact_tooltip.pot.sheaf_pottery_sherd": "Sheaf",
  "compact_tooltip.pot.shelter_pottery_sherd": "Shelter",
  "compact_tooltip.pot.skull_pottery_sherd": "Skull",
  "compact_tooltip.pot.snort_pottery_sherd": "Snort",
  "compact_tooltip.trim.amethyst": "Amethyst",
  "compact_tooltip.trim.copper": "Copper",
  "compact_tooltip.trim.diamond": "Diamond",
  "compact_tooltip.trim.emerald": "Emerald",
  "compact_tooltip.trim.gold": "Gold",
  "compact_tooltip.trim.iron": "Iron",
  "compact_tooltip.trim.lapis": "Lapis",
  "compact_tooltip.trim.netherite": "Netherite",
  "compact_tooltip.trim.quartz": "Quartz",
  "compact_tooltip.trim.redstone": "Redstone"
}